/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    admins: Admin;
    surveys: Survey;
    "question-sets": QuestionSet;
    users: User;
    "payload-preferences": PayloadPreference;
    "payload-migrations": PayloadMigration;
  };
  globals: {};
}
export interface Admin {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
export interface Survey {
  id: string;
  title?: string | null;
  status?: ("started" | "uncompleted" | "completed") | null;
  surveyDate?: string | null;
  surveyUser?: (string | null) | User;
  surveyQuestionSets?: (string | QuestionSet)[] | null;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
export interface QuestionSet {
  id: string;
  active?: boolean | null;
  title?: string | null;
  pointValue?: number | null;
  order?: number | null;
  questions?: QuestionBlock[] | null;
  updatedAt: string;
  createdAt: string;
}
export interface QuestionBlock {
  questionFieldName: string;
  questionOrder: number;
  questionTextFields: {
    question: string;
    answer: (AnswerCheckboxBlock | AnswerTextBlock | AnswerRichTextBlock)[];
  };
  id?: string | null;
  blockName?: string | null;
  blockType: "questionBlock";
}
export interface AnswerCheckboxBlock {
  answerCheckboxFields?: {
    answerCheckboxLabel?: string | null;
    answerCheckboxValue?: boolean | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: "answerCheckboxBlock";
}
export interface AnswerTextBlock {
  answerTextFields?: {
    answerTextFieldLabel?: string | null;
    answerTextValue?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: "answerTextBlock";
}
export interface AnswerRichTextBlock {
  answerRichTextFields?: {
    answerRichTextFieldLabel?: string | null;
    answerTextValue?:
      | {
          [k: string]: unknown;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: "answerRichTextBlock";
}
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: "admins";
        value: string | Admin;
      }
    | {
        relationTo: "users";
        value: string | User;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
